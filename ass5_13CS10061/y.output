Nonterminals useless in grammar

   N


Terminals unused in grammar

   STRUCT
   TYPEDEF
   UNION
   HASH


Rules useless in grammar

  212 N: %empty


State 326 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: ID
    2                   | INT_NO
    3                   | FLOAT_NO
    4                   | STRING
    5                   | CHARACTER
    6                   | LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE

    7 postfix_expression: primary_expression
    8                   | postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
    9                   | postfix_expression LEFT_ROUND_BRACE argument_expression_listopt RIGHT_ROUND_BRACE
   10                   | postfix_expression PERIOD ID
   11                   | postfix_expression ARROW ID
   12                   | postfix_expression INCREMENT
   13                   | postfix_expression DECREMENT
   14                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

   16 argument_expression_listopt: argument_expression_list
   17                            | %empty

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list COMMA assignment_expression

   20 unary_expression: postfix_expression
   21                 | INCREMENT unary_expression
   22                 | DECREMENT unary_expression
   23                 | unary_operator cast_expression
   24                 | SIZEOF unary_expression
   25                 | SIZEOF LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE

   26 unary_operator: AMPERSAND
   27               | MULTIPLY
   28               | ADD
   29               | SUBTRACT
   30               | TILDA
   31               | NEGATION

   32 cast_expression: unary_expression
   33                | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE cast_expression

   34 multiplicative_expression: cast_expression
   35                          | multiplicative_expression MULTIPLY cast_expression
   36                          | multiplicative_expression DIVIDE cast_expression
   37                          | multiplicative_expression MODULUS cast_expression

   38 additive_expression: multiplicative_expression
   39                    | additive_expression ADD multiplicative_expression
   40                    | additive_expression SUBTRACT multiplicative_expression

   41 shift_expression: additive_expression
   42                 | shift_expression LEFT_SHIFT additive_expression
   43                 | shift_expression RIGHT_SHIFT additive_expression

   44 relational_expression: shift_expression
   45                      | relational_expression LESS_THAN shift_expression
   46                      | relational_expression GREATER_THAN shift_expression
   47                      | relational_expression LESS_THAN_EQUAL_TO shift_expression
   48                      | relational_expression GREATER_THAN_EQUAL_TO shift_expression

   49 equality_expression: relational_expression
   50                    | equality_expression DOUBLE_EQUAL relational_expression
   51                    | equality_expression NOT_EQUAL relational_expression

   52 and_expression: equality_expression
   53               | and_expression AMPERSAND equality_expression

   54 exclusive_or_expression: and_expression
   55                        | exclusive_or_expression XOR and_expression

   56 inclusive_or_expression: exclusive_or_expression
   57                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   58 logical_and_expression: inclusive_or_expression
   59                       | logical_and_expression BINARY_AND inclusive_or_expression

   60 logical_or_expression: logical_and_expression
   61                      | logical_or_expression BINARY_OR logical_and_expression

   62 conditional_expression: logical_or_expression
   63                       | logical_or_expression QUESTION_MARK expression COLON conditional_expression

   64 assignment_expression: conditional_expression
   65                      | unary_expression assignment_operator assignment_expression

   66 assignment_expressionopt: assignment_expression
   67                         | %empty

   68 assignment_operator: EQUAL
   69                    | MULTIPLY_EQUAL
   70                    | DIVIDE_EQUAL
   71                    | MODULUS_EQUAL
   72                    | PLUS_EQUAL
   73                    | MINUS_EQUAL
   74                    | LEFT_SHIFT_EQUAL
   75                    | RIGHT_SHIFT_EQUAL
   76                    | AND_EQUAL
   77                    | XOR_EQUAL
   78                    | OR_EQUAL

   79 expression: assignment_expression
   80           | expression COMMA assignment_expression

   81 expressionopt: expression
   82              | %empty

   83 constant_expression: conditional_expression

   84 declaration: declaration_specifiers init_declarator_listopt SEMI_COLON

   85 declaration_specifiers: storage_class_specifier
   86                       | storage_class_specifier declaration_specifiers
   87                       | type_specifier
   88                       | type_specifier declaration_specifiers
   89                       | type_qualifier
   90                       | type_qualifier declaration_specifiers
   91                       | function_specifier
   92                       | function_specifier declaration_specifiers

   93 init_declarator_listopt: init_declarator_list
   94                        | %empty

   95 init_declarator_list: init_declarator
   96                     | init_declarator_list COMMA init_declarator

   97 init_declarator: declarator
   98                | declarator EQUAL initializer

   99 storage_class_specifier: EXTERN
  100                        | STATIC
  101                        | AUTO
  102                        | REGISTER

  103 type_specifier: VOID
  104               | CHAR
  105               | SHORT
  106               | INT
  107               | LONG
  108               | FLOAT
  109               | DOUBLE
  110               | SIGNED
  111               | UNSIGNED
  112               | BOOL
  113               | COMPLEX
  114               | IMAGINARY
  115               | enum_specifier

  116 specifier_qualifier_list: type_specifier specifier_qualifier_listopt
  117                         | type_qualifier specifier_qualifier_listopt

  118 specifier_qualifier_listopt: specifier_qualifier_list
  119                            | %empty

  120 enum_specifier: ENUM identifieropt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  121               | ENUM identifieropt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE
  122               | ENUM ID

  123 enumerator_list: enumerator
  124                | enumerator_list COMMA enumerator

  125 enumerator: ID
  126           | ID EQUAL constant_expression

  127 type_qualifier: CONST
  128               | VOLATILE
  129               | RESTRICT

  130 function_specifier: INLINE

  131 declarator: pointer direct_declarator
  132           | direct_declarator

  133 direct_declarator: ID
  134                  | LEFT_ROUND_BRACE declarator RIGHT_ROUND_BRACE
  135                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_listopt assignment_expressionopt RIGHT_SQUARE_BRACE
  136                  | direct_declarator LEFT_SQUARE_BRACE STATIC type_qualifier_listopt assignment_expression RIGHT_SQUARE_BRACE
  137                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACE
  138                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_listopt MULTIPLY RIGHT_SQUARE_BRACE
  139                  | direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  140                  | direct_declarator LEFT_ROUND_BRACE identifier_listopt RIGHT_ROUND_BRACE

  141 pointer: MULTIPLY
  142        | MULTIPLY type_qualifier_list
  143        | MULTIPLY pointer
  144        | MULTIPLY type_qualifier_list pointer

  145 type_qualifier_list: type_qualifier
  146                    | type_qualifier_list type_qualifier

  147 type_qualifier_listopt: type_qualifier_list
  148                       | %empty

  149 parameter_type_list: parameter_list
  150                    | parameter_list COMMA ELLIPSIS

  151 parameter_list: parameter_declaration
  152               | parameter_list COMMA parameter_declaration

  153 parameter_declaration: declaration_specifiers declarator
  154                      | declaration_specifiers

  155 identifier_list: ID
  156                | identifier_list COMMA ID

  157 identifier_listopt: identifier_list
  158                   | %empty

  159 type_name: specifier_qualifier_list

  160 initializer: assignment_expression
  161            | LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
  162            | LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

  163 initializer_list: designationopt initializer
  164                 | initializer_list COMMA designationopt initializer

  165 designation: designator_list EQUAL

  166 designationopt: designation
  167               | %empty

  168 designator_list: designator
  169                | designator_list designator

  170 designator: LEFT_SQUARE_BRACE constant_expression RIGHT_SQUARE_BRACE
  171           | PERIOD ID

  172 statement: labeled_statement
  173          | compound_statement
  174          | expression_statement
  175          | selection_statement
  176          | iteration_statement
  177          | jump_statement

  178 labeled_statement: ID COLON statement
  179                  | CASE constant_expression COLON statement
  180                  | DEFAULT COLON statement

  181 compound_statement: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  182                   | LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE

  183 block_item_list: block_item
  184                | block_item_list M block_item

  185 block_item: declaration
  186           | statement

  187 expression_statement: SEMI_COLON
  188                     | expression SEMI_COLON

  189 selection_statement: IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement
  190                    | IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE statement
  191                    | SWITCH LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

  192 iteration_statement: WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement
  193                    | DO statement WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMI_COLON
  194                    | FOR LEFT_ROUND_BRACE expressionopt SEMI_COLON expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement
  195                    | FOR LEFT_ROUND_BRACE declaration expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement

  196 jump_statement: GOTO ID SEMI_COLON
  197               | CONTINUE SEMI_COLON
  198               | BREAK SEMI_COLON
  199               | RETURN expressionopt SEMI_COLON

  200 translation_unit: external_declaration
  201                 | translation_unit external_declaration

  202 external_declaration: function_definition
  203                     | declaration

  204 function_definition: declaration_specifiers declarator declaration_list compound_statement
  205                    | declaration_specifiers declarator K compound_statement

  206 declaration_list: declaration
  207                 | declaration_list declaration

  208 identifieropt: ID
  209              | %empty

  210 M: %empty

  211 K: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
AUTO (258) 101
BREAK (259) 198
CASE (260) 179
CHAR (261) 104
CONST (262) 127
CONTINUE (263) 197
DEFAULT (264) 180
DO (265) 193
DOUBLE (266) 109
ELSE (267) 190
ENUM (268) 120 121 122
EXTERN (269) 99
FLOAT (270) 108
FOR (271) 194 195
GOTO (272) 196
IF (273) 189 190
INLINE (274) 130
INT (275) 106
LONG (276) 107
REGISTER (277) 102
RESTRICT (278) 129
RETURN (279) 199
SHORT (280) 105
SIGNED (281) 110
SIZEOF (282) 24 25
STATIC (283) 100 136 137
STRUCT (284)
SWITCH (285) 191
TYPEDEF (286)
UNION (287)
UNSIGNED (288) 111
VOID (289) 103
VOLATILE (290) 128
WHILE (291) 192 193
BOOL (292) 112
COMPLEX (293) 113
IMAGINARY (294) 114
ID (295) 1 10 11 122 125 126 133 155 156 171 178 196 208
INT_NO (296) 2
FLOAT_NO (297) 3
CHARACTER (298) 5
STRING (299) 4
LEFT_SQUARE_BRACE (300) 8 135 136 137 138 170
RIGHT_SQUARE_BRACE (301) 8 135 136 137 138 170
LEFT_ROUND_BRACE (302) 6 9 14 15 25 33 134 139 140 189 190 191 192
    193 194 195
RIGHT_ROUND_BRACE (303) 6 9 14 15 25 33 134 139 140 189 190 191 192
    193 194 195
LEFT_CURLY_BRACE (304) 14 15 120 121 161 162 181 182
RIGHT_CURLY_BRACE (305) 14 15 120 121 161 162 181 182
PERIOD (306) 10 171
ARROW (307) 11
INCREMENT (308) 12 21
DECREMENT (309) 13 22
AMPERSAND (310) 26 53
MULTIPLY (311) 27 35 138 141 142 143 144
ADD (312) 28 39
SUBTRACT (313) 29 40
TILDA (314) 30
NEGATION (315) 31
DIVIDE (316) 36
MODULUS (317) 37
LEFT_SHIFT (318) 42
RIGHT_SHIFT (319) 43
LESS_THAN (320) 45
GREATER_THAN (321) 46
LESS_THAN_EQUAL_TO (322) 47
GREATER_THAN_EQUAL_TO (323) 48
DOUBLE_EQUAL (324) 50
NOT_EQUAL (325) 51
XOR (326) 55
BITWISE_OR (327) 57
BINARY_AND (328) 59
BINARY_OR (329) 61
QUESTION_MARK (330) 63
COLON (331) 63 178 179 180
SEMI_COLON (332) 84 187 188 193 194 195 196 197 198 199
ELLIPSIS (333) 150
EQUAL (334) 68 98 126 165
MULTIPLY_EQUAL (335) 69
DIVIDE_EQUAL (336) 70
MODULUS_EQUAL (337) 71
PLUS_EQUAL (338) 72
MINUS_EQUAL (339) 73
LEFT_SHIFT_EQUAL (340) 74
RIGHT_SHIFT_EQUAL (341) 75
AND_EQUAL (342) 76
XOR_EQUAL (343) 77
OR_EQUAL (344) 78
COMMA (345) 15 19 80 96 121 124 150 152 156 162 164
HASH (346)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
primary_expression (93)
    on left: 1 2 3 4 5 6, on right: 7
postfix_expression (94)
    on left: 7 8 9 10 11 12 13 14 15, on right: 8 9 10 11 12 13 20
argument_expression_listopt (95)
    on left: 16 17, on right: 9
argument_expression_list (96)
    on left: 18 19, on right: 16 19
unary_expression (97)
    on left: 20 21 22 23 24 25, on right: 21 22 24 32 65
unary_operator (98)
    on left: 26 27 28 29 30 31, on right: 23
cast_expression (99)
    on left: 32 33, on right: 23 33 34 35 36 37
multiplicative_expression (100)
    on left: 34 35 36 37, on right: 35 36 37 38 39 40
additive_expression (101)
    on left: 38 39 40, on right: 39 40 41 42 43
shift_expression (102)
    on left: 41 42 43, on right: 42 43 44 45 46 47 48
relational_expression (103)
    on left: 44 45 46 47 48, on right: 45 46 47 48 49 50 51
equality_expression (104)
    on left: 49 50 51, on right: 50 51 52 53
and_expression (105)
    on left: 52 53, on right: 53 54 55
exclusive_or_expression (106)
    on left: 54 55, on right: 55 56 57
inclusive_or_expression (107)
    on left: 56 57, on right: 57 58 59
logical_and_expression (108)
    on left: 58 59, on right: 59 60 61
logical_or_expression (109)
    on left: 60 61, on right: 61 62 63
conditional_expression (110)
    on left: 62 63, on right: 63 64 83
assignment_expression (111)
    on left: 64 65, on right: 18 19 65 66 79 80 136 137 160
assignment_expressionopt (112)
    on left: 66 67, on right: 135
assignment_operator (113)
    on left: 68 69 70 71 72 73 74 75 76 77 78, on right: 65
expression (114)
    on left: 79 80, on right: 6 8 63 80 81 188 189 190 191 192 193
expressionopt (115)
    on left: 81 82, on right: 194 195 199
constant_expression (116)
    on left: 83, on right: 126 170 179
declaration (117)
    on left: 84, on right: 185 195 203 206 207
declaration_specifiers (118)
    on left: 85 86 87 88 89 90 91 92, on right: 84 86 88 90 92 153
    154 204 205
init_declarator_listopt (119)
    on left: 93 94, on right: 84
init_declarator_list (120)
    on left: 95 96, on right: 93 96
init_declarator (121)
    on left: 97 98, on right: 95 96
storage_class_specifier (122)
    on left: 99 100 101 102, on right: 85 86
type_specifier (123)
    on left: 103 104 105 106 107 108 109 110 111 112 113 114 115, on right:
    87 88 116
specifier_qualifier_list (124)
    on left: 116 117, on right: 118 159
specifier_qualifier_listopt (125)
    on left: 118 119, on right: 116 117
enum_specifier (126)
    on left: 120 121 122, on right: 115
enumerator_list (127)
    on left: 123 124, on right: 120 121 124
enumerator (128)
    on left: 125 126, on right: 123 124
type_qualifier (129)
    on left: 127 128 129, on right: 89 90 117 145 146
function_specifier (130)
    on left: 130, on right: 91 92
declarator (131)
    on left: 131 132, on right: 97 98 134 153 204 205
direct_declarator (132)
    on left: 133 134 135 136 137 138 139 140, on right: 131 132 135
    136 137 138 139 140
pointer (133)
    on left: 141 142 143 144, on right: 131 143 144
type_qualifier_list (134)
    on left: 145 146, on right: 137 142 144 146 147
type_qualifier_listopt (135)
    on left: 147 148, on right: 135 136 138
parameter_type_list (136)
    on left: 149 150, on right: 139
parameter_list (137)
    on left: 151 152, on right: 149 150 152
parameter_declaration (138)
    on left: 153 154, on right: 151 152
identifier_list (139)
    on left: 155 156, on right: 156 157
identifier_listopt (140)
    on left: 157 158, on right: 140
type_name (141)
    on left: 159, on right: 14 15 25 33
initializer (142)
    on left: 160 161 162, on right: 98 163 164
initializer_list (143)
    on left: 163 164, on right: 14 15 161 162 164
designation (144)
    on left: 165, on right: 166
designationopt (145)
    on left: 166 167, on right: 163 164
designator_list (146)
    on left: 168 169, on right: 165 169
designator (147)
    on left: 170 171, on right: 168 169
statement (148)
    on left: 172 173 174 175 176 177, on right: 178 179 180 186 189
    190 191 192 193 194 195
labeled_statement (149)
    on left: 178 179 180, on right: 172
compound_statement (150)
    on left: 181 182, on right: 173 204 205
block_item_list (151)
    on left: 183 184, on right: 182 184
block_item (152)
    on left: 185 186, on right: 183 184
expression_statement (153)
    on left: 187 188, on right: 174
selection_statement (154)
    on left: 189 190 191, on right: 175
iteration_statement (155)
    on left: 192 193 194 195, on right: 176
jump_statement (156)
    on left: 196 197 198 199, on right: 177
translation_unit (157)
    on left: 200 201, on right: 0 201
external_declaration (158)
    on left: 202 203, on right: 200 201
function_definition (159)
    on left: 204 205, on right: 202
declaration_list (160)
    on left: 206 207, on right: 204 207
identifieropt (161)
    on left: 208 209, on right: 120 121
M (162)
    on left: 210, on right: 184
K (163)
    on left: 211, on right: 205


State 0

    0 $accept: . translation_unit $end

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

  101 storage_class_specifier: AUTO .

    $default  reduce using rule 101 (storage_class_specifier)


State 2

  104 type_specifier: CHAR .

    $default  reduce using rule 104 (type_specifier)


State 3

  127 type_qualifier: CONST .

    $default  reduce using rule 127 (type_qualifier)


State 4

  109 type_specifier: DOUBLE .

    $default  reduce using rule 109 (type_specifier)


State 5

  120 enum_specifier: ENUM . identifieropt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  121               | ENUM . identifieropt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE
  122               | ENUM . ID

    ID  shift, and go to state 32

    $default  reduce using rule 209 (identifieropt)

    identifieropt  go to state 33


State 6

   99 storage_class_specifier: EXTERN .

    $default  reduce using rule 99 (storage_class_specifier)


State 7

  108 type_specifier: FLOAT .

    $default  reduce using rule 108 (type_specifier)


State 8

  130 function_specifier: INLINE .

    $default  reduce using rule 130 (function_specifier)


State 9

  106 type_specifier: INT .

    $default  reduce using rule 106 (type_specifier)


State 10

  107 type_specifier: LONG .

    $default  reduce using rule 107 (type_specifier)


State 11

  102 storage_class_specifier: REGISTER .

    $default  reduce using rule 102 (storage_class_specifier)


State 12

  129 type_qualifier: RESTRICT .

    $default  reduce using rule 129 (type_qualifier)


State 13

  105 type_specifier: SHORT .

    $default  reduce using rule 105 (type_specifier)


State 14

  110 type_specifier: SIGNED .

    $default  reduce using rule 110 (type_specifier)


State 15

  100 storage_class_specifier: STATIC .

    $default  reduce using rule 100 (storage_class_specifier)


State 16

  111 type_specifier: UNSIGNED .

    $default  reduce using rule 111 (type_specifier)


State 17

  103 type_specifier: VOID .

    $default  reduce using rule 103 (type_specifier)


State 18

  128 type_qualifier: VOLATILE .

    $default  reduce using rule 128 (type_qualifier)


State 19

  112 type_specifier: BOOL .

    $default  reduce using rule 112 (type_specifier)


State 20

  113 type_specifier: COMPLEX .

    $default  reduce using rule 113 (type_specifier)


State 21

  114 type_specifier: IMAGINARY .

    $default  reduce using rule 114 (type_specifier)


State 22

  203 external_declaration: declaration .

    $default  reduce using rule 203 (external_declaration)


State 23

   84 declaration: declaration_specifiers . init_declarator_listopt SEMI_COLON
  204 function_definition: declaration_specifiers . declarator declaration_list compound_statement
  205                    | declaration_specifiers . declarator K compound_statement

    ID                shift, and go to state 34
    LEFT_ROUND_BRACE  shift, and go to state 35
    MULTIPLY          shift, and go to state 36

    $default  reduce using rule 94 (init_declarator_listopt)

    init_declarator_listopt  go to state 37
    init_declarator_list     go to state 38
    init_declarator          go to state 39
    declarator               go to state 40
    direct_declarator        go to state 41
    pointer                  go to state 42


State 24

   85 declaration_specifiers: storage_class_specifier .
   86                       | storage_class_specifier . declaration_specifiers

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 85 (declaration_specifiers)

    declaration_specifiers   go to state 43
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 25

   87 declaration_specifiers: type_specifier .
   88                       | type_specifier . declaration_specifiers

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 87 (declaration_specifiers)

    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 26

  115 type_specifier: enum_specifier .

    $default  reduce using rule 115 (type_specifier)


State 27

   89 declaration_specifiers: type_qualifier .
   90                       | type_qualifier . declaration_specifiers

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 89 (declaration_specifiers)

    declaration_specifiers   go to state 45
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 28

   91 declaration_specifiers: function_specifier .
   92                       | function_specifier . declaration_specifiers

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 91 (declaration_specifiers)

    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 29

    0 $accept: translation_unit . $end
  201 translation_unit: translation_unit . external_declaration

    $end       shift, and go to state 47
    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 48
    function_definition      go to state 31


State 30

  200 translation_unit: external_declaration .

    $default  reduce using rule 200 (translation_unit)


State 31

  202 external_declaration: function_definition .

    $default  reduce using rule 202 (external_declaration)


State 32

  122 enum_specifier: ENUM ID .
  208 identifieropt: ID .

    LEFT_CURLY_BRACE  reduce using rule 208 (identifieropt)
    $default          reduce using rule 122 (enum_specifier)


State 33

  120 enum_specifier: ENUM identifieropt . LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE
  121               | ENUM identifieropt . LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 49


State 34

  133 direct_declarator: ID .

    $default  reduce using rule 133 (direct_declarator)


State 35

  134 direct_declarator: LEFT_ROUND_BRACE . declarator RIGHT_ROUND_BRACE

    ID                shift, and go to state 34
    LEFT_ROUND_BRACE  shift, and go to state 35
    MULTIPLY          shift, and go to state 36

    declarator         go to state 50
    direct_declarator  go to state 41
    pointer            go to state 42


State 36

  141 pointer: MULTIPLY .
  142        | MULTIPLY . type_qualifier_list
  143        | MULTIPLY . pointer
  144        | MULTIPLY . type_qualifier_list pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18
    MULTIPLY  shift, and go to state 36

    $default  reduce using rule 141 (pointer)

    type_qualifier       go to state 51
    pointer              go to state 52
    type_qualifier_list  go to state 53


State 37

   84 declaration: declaration_specifiers init_declarator_listopt . SEMI_COLON

    SEMI_COLON  shift, and go to state 54


State 38

   93 init_declarator_listopt: init_declarator_list .
   96 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 55

    $default  reduce using rule 93 (init_declarator_listopt)


State 39

   95 init_declarator_list: init_declarator .

    $default  reduce using rule 95 (init_declarator_list)


State 40

   97 init_declarator: declarator .
   98                | declarator . EQUAL initializer
  204 function_definition: declaration_specifiers declarator . declaration_list compound_statement
  205                    | declaration_specifiers declarator . K compound_statement

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    EQUAL      shift, and go to state 56

    LEFT_CURLY_BRACE  reduce using rule 211 (K)
    $default          reduce using rule 97 (init_declarator)

    declaration              go to state 57
    declaration_specifiers   go to state 58
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list         go to state 59
    K                        go to state 60


State 41

  132 declarator: direct_declarator .
  135 direct_declarator: direct_declarator . LEFT_SQUARE_BRACE type_qualifier_listopt assignment_expressionopt RIGHT_SQUARE_BRACE
  136                  | direct_declarator . LEFT_SQUARE_BRACE STATIC type_qualifier_listopt assignment_expression RIGHT_SQUARE_BRACE
  137                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACE
  138                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_listopt MULTIPLY RIGHT_SQUARE_BRACE
  139                  | direct_declarator . LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  140                  | direct_declarator . LEFT_ROUND_BRACE identifier_listopt RIGHT_ROUND_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 61
    LEFT_ROUND_BRACE   shift, and go to state 62

    $default  reduce using rule 132 (declarator)


State 42

  131 declarator: pointer . direct_declarator

    ID                shift, and go to state 34
    LEFT_ROUND_BRACE  shift, and go to state 35

    direct_declarator  go to state 63


State 43

   86 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 86 (declaration_specifiers)


State 44

   88 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 88 (declaration_specifiers)


State 45

   90 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 90 (declaration_specifiers)


State 46

   92 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 92 (declaration_specifiers)


State 47

    0 $accept: translation_unit $end .

    $default  accept


State 48

  201 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 201 (translation_unit)


State 49

  120 enum_specifier: ENUM identifieropt LEFT_CURLY_BRACE . enumerator_list RIGHT_CURLY_BRACE
  121               | ENUM identifieropt LEFT_CURLY_BRACE . enumerator_list COMMA RIGHT_CURLY_BRACE

    ID  shift, and go to state 64

    enumerator_list  go to state 65
    enumerator       go to state 66


State 50

  134 direct_declarator: LEFT_ROUND_BRACE declarator . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 67


State 51

  145 type_qualifier_list: type_qualifier .

    $default  reduce using rule 145 (type_qualifier_list)


State 52

  143 pointer: MULTIPLY pointer .

    $default  reduce using rule 143 (pointer)


State 53

  142 pointer: MULTIPLY type_qualifier_list .
  144        | MULTIPLY type_qualifier_list . pointer
  146 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18
    MULTIPLY  shift, and go to state 36

    $default  reduce using rule 142 (pointer)

    type_qualifier  go to state 68
    pointer         go to state 69


State 54

   84 declaration: declaration_specifiers init_declarator_listopt SEMI_COLON .

    $default  reduce using rule 84 (declaration)


State 55

   96 init_declarator_list: init_declarator_list COMMA . init_declarator

    ID                shift, and go to state 34
    LEFT_ROUND_BRACE  shift, and go to state 35
    MULTIPLY          shift, and go to state 36

    init_declarator    go to state 70
    declarator         go to state 71
    direct_declarator  go to state 41
    pointer            go to state 42


State 56

   98 init_declarator: declarator EQUAL . initializer

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 79
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 104
    initializer                go to state 105


State 57

  206 declaration_list: declaration .

    $default  reduce using rule 206 (declaration_list)


State 58

   84 declaration: declaration_specifiers . init_declarator_listopt SEMI_COLON

    ID                shift, and go to state 34
    LEFT_ROUND_BRACE  shift, and go to state 35
    MULTIPLY          shift, and go to state 36

    $default  reduce using rule 94 (init_declarator_listopt)

    init_declarator_listopt  go to state 37
    init_declarator_list     go to state 38
    init_declarator          go to state 39
    declarator               go to state 71
    direct_declarator        go to state 41
    pointer                  go to state 42


State 59

  204 function_definition: declaration_specifiers declarator declaration_list . compound_statement
  207 declaration_list: declaration_list . declaration

    AUTO              shift, and go to state 1
    CHAR              shift, and go to state 2
    CONST             shift, and go to state 3
    DOUBLE            shift, and go to state 4
    ENUM              shift, and go to state 5
    EXTERN            shift, and go to state 6
    FLOAT             shift, and go to state 7
    INLINE            shift, and go to state 8
    INT               shift, and go to state 9
    LONG              shift, and go to state 10
    REGISTER          shift, and go to state 11
    RESTRICT          shift, and go to state 12
    SHORT             shift, and go to state 13
    SIGNED            shift, and go to state 14
    STATIC            shift, and go to state 15
    UNSIGNED          shift, and go to state 16
    VOID              shift, and go to state 17
    VOLATILE          shift, and go to state 18
    BOOL              shift, and go to state 19
    COMPLEX           shift, and go to state 20
    IMAGINARY         shift, and go to state 21
    LEFT_CURLY_BRACE  shift, and go to state 106

    declaration              go to state 107
    declaration_specifiers   go to state 58
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    compound_statement       go to state 108


State 60

  205 function_definition: declaration_specifiers declarator K . compound_statement

    LEFT_CURLY_BRACE  shift, and go to state 106

    compound_statement  go to state 109


State 61

  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACE . type_qualifier_listopt assignment_expressionopt RIGHT_SQUARE_BRACE
  136                  | direct_declarator LEFT_SQUARE_BRACE . STATIC type_qualifier_listopt assignment_expression RIGHT_SQUARE_BRACE
  137                  | direct_declarator LEFT_SQUARE_BRACE . type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACE
  138                  | direct_declarator LEFT_SQUARE_BRACE . type_qualifier_listopt MULTIPLY RIGHT_SQUARE_BRACE

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 110
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 148 (type_qualifier_listopt)

    type_qualifier          go to state 51
    type_qualifier_list     go to state 111
    type_qualifier_listopt  go to state 112


State 62

  139 direct_declarator: direct_declarator LEFT_ROUND_BRACE . parameter_type_list RIGHT_ROUND_BRACE
  140                  | direct_declarator LEFT_ROUND_BRACE . identifier_listopt RIGHT_ROUND_BRACE

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ID         shift, and go to state 113

    $default  reduce using rule 158 (identifier_listopt)

    declaration_specifiers   go to state 114
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list      go to state 115
    parameter_list           go to state 116
    parameter_declaration    go to state 117
    identifier_list          go to state 118
    identifier_listopt       go to state 119


State 63

  131 declarator: pointer direct_declarator .
  135 direct_declarator: direct_declarator . LEFT_SQUARE_BRACE type_qualifier_listopt assignment_expressionopt RIGHT_SQUARE_BRACE
  136                  | direct_declarator . LEFT_SQUARE_BRACE STATIC type_qualifier_listopt assignment_expression RIGHT_SQUARE_BRACE
  137                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACE
  138                  | direct_declarator . LEFT_SQUARE_BRACE type_qualifier_listopt MULTIPLY RIGHT_SQUARE_BRACE
  139                  | direct_declarator . LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  140                  | direct_declarator . LEFT_ROUND_BRACE identifier_listopt RIGHT_ROUND_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 61
    LEFT_ROUND_BRACE   shift, and go to state 62

    $default  reduce using rule 131 (declarator)


State 64

  125 enumerator: ID .
  126           | ID . EQUAL constant_expression

    EQUAL  shift, and go to state 120

    $default  reduce using rule 125 (enumerator)


State 65

  120 enum_specifier: ENUM identifieropt LEFT_CURLY_BRACE enumerator_list . RIGHT_CURLY_BRACE
  121               | ENUM identifieropt LEFT_CURLY_BRACE enumerator_list . COMMA RIGHT_CURLY_BRACE
  124 enumerator_list: enumerator_list . COMMA enumerator

    RIGHT_CURLY_BRACE  shift, and go to state 121
    COMMA              shift, and go to state 122


State 66

  123 enumerator_list: enumerator .

    $default  reduce using rule 123 (enumerator_list)


State 67

  134 direct_declarator: LEFT_ROUND_BRACE declarator RIGHT_ROUND_BRACE .

    $default  reduce using rule 134 (direct_declarator)


State 68

  146 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 146 (type_qualifier_list)


State 69

  144 pointer: MULTIPLY type_qualifier_list pointer .

    $default  reduce using rule 144 (pointer)


State 70

   96 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 96 (init_declarator_list)


State 71

   97 init_declarator: declarator .
   98                | declarator . EQUAL initializer

    EQUAL  shift, and go to state 56

    $default  reduce using rule 97 (init_declarator)


State 72

   24 unary_expression: SIZEOF . unary_expression
   25                 | SIZEOF . LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 123
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 124
    unary_operator      go to state 91


State 73

    1 primary_expression: ID .

    $default  reduce using rule 1 (primary_expression)


State 74

    2 primary_expression: INT_NO .

    $default  reduce using rule 2 (primary_expression)


State 75

    3 primary_expression: FLOAT_NO .

    $default  reduce using rule 3 (primary_expression)


State 76

    5 primary_expression: CHARACTER .

    $default  reduce using rule 5 (primary_expression)


State 77

    4 primary_expression: STRING .

    $default  reduce using rule 4 (primary_expression)


State 78

    6 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE
   14 postfix_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   33 cast_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE cast_expression

    CHAR              shift, and go to state 2
    CONST             shift, and go to state 3
    DOUBLE            shift, and go to state 4
    ENUM              shift, and go to state 5
    FLOAT             shift, and go to state 7
    INT               shift, and go to state 9
    LONG              shift, and go to state 10
    RESTRICT          shift, and go to state 12
    SHORT             shift, and go to state 13
    SIGNED            shift, and go to state 14
    SIZEOF            shift, and go to state 72
    UNSIGNED          shift, and go to state 16
    VOID              shift, and go to state 17
    VOLATILE          shift, and go to state 18
    BOOL              shift, and go to state 19
    COMPLEX           shift, and go to state 20
    IMAGINARY         shift, and go to state 21
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 126
    type_specifier             go to state 127
    specifier_qualifier_list   go to state 128
    enum_specifier             go to state 26
    type_qualifier             go to state 129
    type_name                  go to state 130


State 79

  161 initializer: LEFT_CURLY_BRACE . initializer_list RIGHT_CURLY_BRACE
  162            | LEFT_CURLY_BRACE . initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 131
    PERIOD             shift, and go to state 132

    $default  reduce using rule 167 (designationopt)

    initializer_list  go to state 133
    designation       go to state 134
    designationopt    go to state 135
    designator_list   go to state 136
    designator        go to state 137


State 80

   21 unary_expression: INCREMENT . unary_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 138
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 139
    unary_operator      go to state 91


State 81

   22 unary_expression: DECREMENT . unary_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 138
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 140
    unary_operator      go to state 91


State 82

   26 unary_operator: AMPERSAND .

    $default  reduce using rule 26 (unary_operator)


State 83

   27 unary_operator: MULTIPLY .

    $default  reduce using rule 27 (unary_operator)


State 84

   28 unary_operator: ADD .

    $default  reduce using rule 28 (unary_operator)


State 85

   29 unary_operator: SUBTRACT .

    $default  reduce using rule 29 (unary_operator)


State 86

   30 unary_operator: TILDA .

    $default  reduce using rule 30 (unary_operator)


State 87

   31 unary_operator: NEGATION .

    $default  reduce using rule 31 (unary_operator)


State 88

    7 postfix_expression: primary_expression .

    $default  reduce using rule 7 (postfix_expression)


State 89

    8 postfix_expression: postfix_expression . LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
    9                   | postfix_expression . LEFT_ROUND_BRACE argument_expression_listopt RIGHT_ROUND_BRACE
   10                   | postfix_expression . PERIOD ID
   11                   | postfix_expression . ARROW ID
   12                   | postfix_expression . INCREMENT
   13                   | postfix_expression . DECREMENT
   20 unary_expression: postfix_expression .

    LEFT_SQUARE_BRACE  shift, and go to state 141
    LEFT_ROUND_BRACE   shift, and go to state 142
    PERIOD             shift, and go to state 143
    ARROW              shift, and go to state 144
    INCREMENT          shift, and go to state 145
    DECREMENT          shift, and go to state 146

    $default  reduce using rule 20 (unary_expression)


State 90

   32 cast_expression: unary_expression .
   65 assignment_expression: unary_expression . assignment_operator assignment_expression

    EQUAL              shift, and go to state 147
    MULTIPLY_EQUAL     shift, and go to state 148
    DIVIDE_EQUAL       shift, and go to state 149
    MODULUS_EQUAL      shift, and go to state 150
    PLUS_EQUAL         shift, and go to state 151
    MINUS_EQUAL        shift, and go to state 152
    LEFT_SHIFT_EQUAL   shift, and go to state 153
    RIGHT_SHIFT_EQUAL  shift, and go to state 154
    AND_EQUAL          shift, and go to state 155
    XOR_EQUAL          shift, and go to state 156
    OR_EQUAL           shift, and go to state 157

    $default  reduce using rule 32 (cast_expression)

    assignment_operator  go to state 158


State 91

   23 unary_expression: unary_operator . cast_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 159
    unary_operator      go to state 91
    cast_expression     go to state 160


State 92

   34 multiplicative_expression: cast_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 93

   35 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   36                          | multiplicative_expression . DIVIDE cast_expression
   37                          | multiplicative_expression . MODULUS cast_expression
   38 additive_expression: multiplicative_expression .

    MULTIPLY  shift, and go to state 161
    DIVIDE    shift, and go to state 162
    MODULUS   shift, and go to state 163

    $default  reduce using rule 38 (additive_expression)


State 94

   39 additive_expression: additive_expression . ADD multiplicative_expression
   40                    | additive_expression . SUBTRACT multiplicative_expression
   41 shift_expression: additive_expression .

    ADD       shift, and go to state 164
    SUBTRACT  shift, and go to state 165

    $default  reduce using rule 41 (shift_expression)


State 95

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   44 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 166
    RIGHT_SHIFT  shift, and go to state 167

    $default  reduce using rule 44 (relational_expression)


State 96

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_THAN_EQUAL_TO shift_expression
   48                      | relational_expression . GREATER_THAN_EQUAL_TO shift_expression
   49 equality_expression: relational_expression .

    LESS_THAN              shift, and go to state 168
    GREATER_THAN           shift, and go to state 169
    LESS_THAN_EQUAL_TO     shift, and go to state 170
    GREATER_THAN_EQUAL_TO  shift, and go to state 171

    $default  reduce using rule 49 (equality_expression)


State 97

   50 equality_expression: equality_expression . DOUBLE_EQUAL relational_expression
   51                    | equality_expression . NOT_EQUAL relational_expression
   52 and_expression: equality_expression .

    DOUBLE_EQUAL  shift, and go to state 172
    NOT_EQUAL     shift, and go to state 173

    $default  reduce using rule 52 (and_expression)


State 98

   53 and_expression: and_expression . AMPERSAND equality_expression
   54 exclusive_or_expression: and_expression .

    AMPERSAND  shift, and go to state 174

    $default  reduce using rule 54 (exclusive_or_expression)


State 99

   55 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   56 inclusive_or_expression: exclusive_or_expression .

    XOR  shift, and go to state 175

    $default  reduce using rule 56 (inclusive_or_expression)


State 100

   57 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   58 logical_and_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 176

    $default  reduce using rule 58 (logical_and_expression)


State 101

   59 logical_and_expression: logical_and_expression . BINARY_AND inclusive_or_expression
   60 logical_or_expression: logical_and_expression .

    BINARY_AND  shift, and go to state 177

    $default  reduce using rule 60 (logical_or_expression)


State 102

   61 logical_or_expression: logical_or_expression . BINARY_OR logical_and_expression
   62 conditional_expression: logical_or_expression .
   63                       | logical_or_expression . QUESTION_MARK expression COLON conditional_expression

    BINARY_OR      shift, and go to state 178
    QUESTION_MARK  shift, and go to state 179

    $default  reduce using rule 62 (conditional_expression)


State 103

   64 assignment_expression: conditional_expression .

    $default  reduce using rule 64 (assignment_expression)


State 104

  160 initializer: assignment_expression .

    $default  reduce using rule 160 (initializer)


State 105

   98 init_declarator: declarator EQUAL initializer .

    $default  reduce using rule 98 (init_declarator)


State 106

  181 compound_statement: LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
  182                   | LEFT_CURLY_BRACE . block_item_list RIGHT_CURLY_BRACE

    AUTO               shift, and go to state 1
    BREAK              shift, and go to state 180
    CASE               shift, and go to state 181
    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    CONTINUE           shift, and go to state 182
    DEFAULT            shift, and go to state 183
    DO                 shift, and go to state 184
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT              shift, and go to state 7
    FOR                shift, and go to state 185
    GOTO               shift, and go to state 186
    IF                 shift, and go to state 187
    INLINE             shift, and go to state 8
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    RETURN             shift, and go to state 188
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 72
    STATIC             shift, and go to state 15
    SWITCH             shift, and go to state 189
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    WHILE              shift, and go to state 190
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    ID                 shift, and go to state 191
    INT_NO             shift, and go to state 74
    FLOAT_NO           shift, and go to state 75
    CHARACTER          shift, and go to state 76
    STRING             shift, and go to state 77
    LEFT_ROUND_BRACE   shift, and go to state 78
    LEFT_CURLY_BRACE   shift, and go to state 106
    RIGHT_CURLY_BRACE  shift, and go to state 192
    INCREMENT          shift, and go to state 80
    DECREMENT          shift, and go to state 81
    AMPERSAND          shift, and go to state 82
    MULTIPLY           shift, and go to state 83
    ADD                shift, and go to state 84
    SUBTRACT           shift, and go to state 85
    TILDA              shift, and go to state 86
    NEGATION           shift, and go to state 87
    SEMI_COLON         shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    declaration                go to state 195
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 196
    labeled_statement          go to state 197
    compound_statement         go to state 198
    block_item_list            go to state 199
    block_item                 go to state 200
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 107

  207 declaration_list: declaration_list declaration .

    $default  reduce using rule 207 (declaration_list)


State 108

  204 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 204 (function_definition)


State 109

  205 function_definition: declaration_specifiers declarator K compound_statement .

    $default  reduce using rule 205 (function_definition)


State 110

  136 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC . type_qualifier_listopt assignment_expression RIGHT_SQUARE_BRACE

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 148 (type_qualifier_listopt)

    type_qualifier          go to state 51
    type_qualifier_list     go to state 205
    type_qualifier_listopt  go to state 206


State 111

  137 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list . STATIC assignment_expression RIGHT_SQUARE_BRACE
  146 type_qualifier_list: type_qualifier_list . type_qualifier
  147 type_qualifier_listopt: type_qualifier_list .

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 207
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 147 (type_qualifier_listopt)

    type_qualifier  go to state 68


State 112

  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_listopt . assignment_expressionopt RIGHT_SQUARE_BRACE
  138                  | direct_declarator LEFT_SQUARE_BRACE type_qualifier_listopt . MULTIPLY RIGHT_SQUARE_BRACE

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 208
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    $default  reduce using rule 67 (assignment_expressionopt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 209
    assignment_expressionopt   go to state 210


State 113

  155 identifier_list: ID .

    $default  reduce using rule 155 (identifier_list)


State 114

  153 parameter_declaration: declaration_specifiers . declarator
  154                      | declaration_specifiers .

    ID                shift, and go to state 34
    LEFT_ROUND_BRACE  shift, and go to state 35
    MULTIPLY          shift, and go to state 36

    $default  reduce using rule 154 (parameter_declaration)

    declarator         go to state 211
    direct_declarator  go to state 41
    pointer            go to state 42


State 115

  139 direct_declarator: direct_declarator LEFT_ROUND_BRACE parameter_type_list . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 212


State 116

  149 parameter_type_list: parameter_list .
  150                    | parameter_list . COMMA ELLIPSIS
  152 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 213

    $default  reduce using rule 149 (parameter_type_list)


State 117

  151 parameter_list: parameter_declaration .

    $default  reduce using rule 151 (parameter_list)


State 118

  156 identifier_list: identifier_list . COMMA ID
  157 identifier_listopt: identifier_list .

    COMMA  shift, and go to state 214

    $default  reduce using rule 157 (identifier_listopt)


State 119

  140 direct_declarator: direct_declarator LEFT_ROUND_BRACE identifier_listopt . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 215


State 120

  126 enumerator: ID EQUAL . constant_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 216
    constant_expression        go to state 217


State 121

  120 enum_specifier: ENUM identifieropt LEFT_CURLY_BRACE enumerator_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 120 (enum_specifier)


State 122

  121 enum_specifier: ENUM identifieropt LEFT_CURLY_BRACE enumerator_list COMMA . RIGHT_CURLY_BRACE
  124 enumerator_list: enumerator_list COMMA . enumerator

    ID                 shift, and go to state 64
    RIGHT_CURLY_BRACE  shift, and go to state 218

    enumerator  go to state 219


State 123

    6 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE
   14 postfix_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   25 unary_expression: SIZEOF LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE

    CHAR              shift, and go to state 2
    CONST             shift, and go to state 3
    DOUBLE            shift, and go to state 4
    ENUM              shift, and go to state 5
    FLOAT             shift, and go to state 7
    INT               shift, and go to state 9
    LONG              shift, and go to state 10
    RESTRICT          shift, and go to state 12
    SHORT             shift, and go to state 13
    SIGNED            shift, and go to state 14
    SIZEOF            shift, and go to state 72
    UNSIGNED          shift, and go to state 16
    VOID              shift, and go to state 17
    VOLATILE          shift, and go to state 18
    BOOL              shift, and go to state 19
    COMPLEX           shift, and go to state 20
    IMAGINARY         shift, and go to state 21
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 126
    type_specifier             go to state 127
    specifier_qualifier_list   go to state 128
    enum_specifier             go to state 26
    type_qualifier             go to state 129
    type_name                  go to state 220


State 124

   24 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 125

   79 expression: assignment_expression .

    $default  reduce using rule 79 (expression)


State 126

    6 primary_expression: LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE
   80 expression: expression . COMMA assignment_expression

    RIGHT_ROUND_BRACE  shift, and go to state 221
    COMMA              shift, and go to state 222


State 127

  116 specifier_qualifier_list: type_specifier . specifier_qualifier_listopt

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 119 (specifier_qualifier_listopt)

    type_specifier               go to state 127
    specifier_qualifier_list     go to state 223
    specifier_qualifier_listopt  go to state 224
    enum_specifier               go to state 26
    type_qualifier               go to state 129


State 128

  159 type_name: specifier_qualifier_list .

    $default  reduce using rule 159 (type_name)


State 129

  117 specifier_qualifier_list: type_qualifier . specifier_qualifier_listopt

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 119 (specifier_qualifier_listopt)

    type_specifier               go to state 127
    specifier_qualifier_list     go to state 223
    specifier_qualifier_listopt  go to state 225
    enum_specifier               go to state 26
    type_qualifier               go to state 129


State 130

   14 postfix_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   33 cast_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE cast_expression

    RIGHT_ROUND_BRACE  shift, and go to state 226


State 131

  170 designator: LEFT_SQUARE_BRACE . constant_expression RIGHT_SQUARE_BRACE

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 216
    constant_expression        go to state 227


State 132

  171 designator: PERIOD . ID

    ID  shift, and go to state 228


State 133

  161 initializer: LEFT_CURLY_BRACE initializer_list . RIGHT_CURLY_BRACE
  162            | LEFT_CURLY_BRACE initializer_list . COMMA RIGHT_CURLY_BRACE
  164 initializer_list: initializer_list . COMMA designationopt initializer

    RIGHT_CURLY_BRACE  shift, and go to state 229
    COMMA              shift, and go to state 230


State 134

  166 designationopt: designation .

    $default  reduce using rule 166 (designationopt)


State 135

  163 initializer_list: designationopt . initializer

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 79
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 104
    initializer                go to state 231


State 136

  165 designation: designator_list . EQUAL
  169 designator_list: designator_list . designator

    LEFT_SQUARE_BRACE  shift, and go to state 131
    PERIOD             shift, and go to state 132
    EQUAL              shift, and go to state 232

    designator  go to state 233


State 137

  168 designator_list: designator .

    $default  reduce using rule 168 (designator_list)


State 138

    6 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE
   14 postfix_expression: LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE . type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    CHAR              shift, and go to state 2
    CONST             shift, and go to state 3
    DOUBLE            shift, and go to state 4
    ENUM              shift, and go to state 5
    FLOAT             shift, and go to state 7
    INT               shift, and go to state 9
    LONG              shift, and go to state 10
    RESTRICT          shift, and go to state 12
    SHORT             shift, and go to state 13
    SIGNED            shift, and go to state 14
    SIZEOF            shift, and go to state 72
    UNSIGNED          shift, and go to state 16
    VOID              shift, and go to state 17
    VOLATILE          shift, and go to state 18
    BOOL              shift, and go to state 19
    COMPLEX           shift, and go to state 20
    IMAGINARY         shift, and go to state 21
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 126
    type_specifier             go to state 127
    specifier_qualifier_list   go to state 128
    enum_specifier             go to state 26
    type_qualifier             go to state 129
    type_name                  go to state 234


State 139

   21 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 140

   22 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 141

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACE . expression RIGHT_SQUARE_BRACE

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 235


State 142

    9 postfix_expression: postfix_expression LEFT_ROUND_BRACE . argument_expression_listopt RIGHT_ROUND_BRACE

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    $default  reduce using rule 17 (argument_expression_listopt)

    primary_expression           go to state 88
    postfix_expression           go to state 89
    argument_expression_listopt  go to state 236
    argument_expression_list     go to state 237
    unary_expression             go to state 90
    unary_operator               go to state 91
    cast_expression              go to state 92
    multiplicative_expression    go to state 93
    additive_expression          go to state 94
    shift_expression             go to state 95
    relational_expression        go to state 96
    equality_expression          go to state 97
    and_expression               go to state 98
    exclusive_or_expression      go to state 99
    inclusive_or_expression      go to state 100
    logical_and_expression       go to state 101
    logical_or_expression        go to state 102
    conditional_expression       go to state 103
    assignment_expression        go to state 238


State 143

   10 postfix_expression: postfix_expression PERIOD . ID

    ID  shift, and go to state 239


State 144

   11 postfix_expression: postfix_expression ARROW . ID

    ID  shift, and go to state 240


State 145

   12 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 12 (postfix_expression)


State 146

   13 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 13 (postfix_expression)


State 147

   68 assignment_operator: EQUAL .

    $default  reduce using rule 68 (assignment_operator)


State 148

   69 assignment_operator: MULTIPLY_EQUAL .

    $default  reduce using rule 69 (assignment_operator)


State 149

   70 assignment_operator: DIVIDE_EQUAL .

    $default  reduce using rule 70 (assignment_operator)


State 150

   71 assignment_operator: MODULUS_EQUAL .

    $default  reduce using rule 71 (assignment_operator)


State 151

   72 assignment_operator: PLUS_EQUAL .

    $default  reduce using rule 72 (assignment_operator)


State 152

   73 assignment_operator: MINUS_EQUAL .

    $default  reduce using rule 73 (assignment_operator)


State 153

   74 assignment_operator: LEFT_SHIFT_EQUAL .

    $default  reduce using rule 74 (assignment_operator)


State 154

   75 assignment_operator: RIGHT_SHIFT_EQUAL .

    $default  reduce using rule 75 (assignment_operator)


State 155

   76 assignment_operator: AND_EQUAL .

    $default  reduce using rule 76 (assignment_operator)


State 156

   77 assignment_operator: XOR_EQUAL .

    $default  reduce using rule 77 (assignment_operator)


State 157

   78 assignment_operator: OR_EQUAL .

    $default  reduce using rule 78 (assignment_operator)


State 158

   65 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 241


State 159

   32 cast_expression: unary_expression .

    $default  reduce using rule 32 (cast_expression)


State 160

   23 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 23 (unary_expression)


State 161

   35 multiplicative_expression: multiplicative_expression MULTIPLY . cast_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 159
    unary_operator      go to state 91
    cast_expression     go to state 242


State 162

   36 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 159
    unary_operator      go to state 91
    cast_expression     go to state 243


State 163

   37 multiplicative_expression: multiplicative_expression MODULUS . cast_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 159
    unary_operator      go to state 91
    cast_expression     go to state 244


State 164

   39 additive_expression: additive_expression ADD . multiplicative_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 245


State 165

   40 additive_expression: additive_expression SUBTRACT . multiplicative_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 246


State 166

   42 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 247


State 167

   43 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 248


State 168

   45 relational_expression: relational_expression LESS_THAN . shift_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 249


State 169

   46 relational_expression: relational_expression GREATER_THAN . shift_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 250


State 170

   47 relational_expression: relational_expression LESS_THAN_EQUAL_TO . shift_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 251


State 171

   48 relational_expression: relational_expression GREATER_THAN_EQUAL_TO . shift_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 252


State 172

   50 equality_expression: equality_expression DOUBLE_EQUAL . relational_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 253


State 173

   51 equality_expression: equality_expression NOT_EQUAL . relational_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 254


State 174

   53 and_expression: and_expression AMPERSAND . equality_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 255


State 175

   55 exclusive_or_expression: exclusive_or_expression XOR . and_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 256


State 176

   57 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 257


State 177

   59 logical_and_expression: logical_and_expression BINARY_AND . inclusive_or_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 258


State 178

   61 logical_or_expression: logical_or_expression BINARY_OR . logical_and_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 259


State 179

   63 conditional_expression: logical_or_expression QUESTION_MARK . expression COLON conditional_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 260


State 180

  198 jump_statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 261


State 181

  179 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 216
    constant_expression        go to state 262


State 182

  197 jump_statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 263


State 183

  180 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 264


State 184

  193 iteration_statement: DO . statement WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMI_COLON

    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    RETURN            shift, and go to state 188
    SIZEOF            shift, and go to state 72
    SWITCH            shift, and go to state 189
    WHILE             shift, and go to state 190
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    statement                  go to state 265
    labeled_statement          go to state 197
    compound_statement         go to state 198
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 185

  194 iteration_statement: FOR . LEFT_ROUND_BRACE expressionopt SEMI_COLON expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement
  195                    | FOR . LEFT_ROUND_BRACE declaration expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 266


State 186

  196 jump_statement: GOTO . ID SEMI_COLON

    ID  shift, and go to state 267


State 187

  189 selection_statement: IF . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement
  190                    | IF . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE statement

    LEFT_ROUND_BRACE  shift, and go to state 268


State 188

  199 jump_statement: RETURN . expressionopt SEMI_COLON

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    $default  reduce using rule 82 (expressionopt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 269
    expressionopt              go to state 270


State 189

  191 selection_statement: SWITCH . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 271


State 190

  192 iteration_statement: WHILE . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 272


State 191

    1 primary_expression: ID .
  178 labeled_statement: ID . COLON statement

    COLON  shift, and go to state 273

    $default  reduce using rule 1 (primary_expression)


State 192

  181 compound_statement: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 181 (compound_statement)


State 193

  187 expression_statement: SEMI_COLON .

    $default  reduce using rule 187 (expression_statement)


State 194

   80 expression: expression . COMMA assignment_expression
  188 expression_statement: expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 274
    COMMA       shift, and go to state 222


State 195

  185 block_item: declaration .

    $default  reduce using rule 185 (block_item)


State 196

  186 block_item: statement .

    $default  reduce using rule 186 (block_item)


State 197

  172 statement: labeled_statement .

    $default  reduce using rule 172 (statement)


State 198

  173 statement: compound_statement .

    $default  reduce using rule 173 (statement)


State 199

  182 compound_statement: LEFT_CURLY_BRACE block_item_list . RIGHT_CURLY_BRACE
  184 block_item_list: block_item_list . M block_item

    RIGHT_CURLY_BRACE  shift, and go to state 275

    $default  reduce using rule 210 (M)

    M  go to state 276


State 200

  183 block_item_list: block_item .

    $default  reduce using rule 183 (block_item_list)


State 201

  174 statement: expression_statement .

    $default  reduce using rule 174 (statement)


State 202

  175 statement: selection_statement .

    $default  reduce using rule 175 (statement)


State 203

  176 statement: iteration_statement .

    $default  reduce using rule 176 (statement)


State 204

  177 statement: jump_statement .

    $default  reduce using rule 177 (statement)


State 205

  146 type_qualifier_list: type_qualifier_list . type_qualifier
  147 type_qualifier_listopt: type_qualifier_list .

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 147 (type_qualifier_listopt)

    type_qualifier  go to state 68


State 206

  136 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC type_qualifier_listopt . assignment_expression RIGHT_SQUARE_BRACE

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 277


State 207

  137 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC . assignment_expression RIGHT_SQUARE_BRACE

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 278


State 208

   27 unary_operator: MULTIPLY .
  138 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_listopt MULTIPLY . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 279

    $default  reduce using rule 27 (unary_operator)


State 209

   66 assignment_expressionopt: assignment_expression .

    $default  reduce using rule 66 (assignment_expressionopt)


State 210

  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_listopt assignment_expressionopt . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 280


State 211

  153 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 153 (parameter_declaration)


State 212

  139 direct_declarator: direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE .

    $default  reduce using rule 139 (direct_declarator)


State 213

  150 parameter_type_list: parameter_list COMMA . ELLIPSIS
  152 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ELLIPSIS   shift, and go to state 281

    declaration_specifiers   go to state 114
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 282


State 214

  156 identifier_list: identifier_list COMMA . ID

    ID  shift, and go to state 283


State 215

  140 direct_declarator: direct_declarator LEFT_ROUND_BRACE identifier_listopt RIGHT_ROUND_BRACE .

    $default  reduce using rule 140 (direct_declarator)


State 216

   83 constant_expression: conditional_expression .

    $default  reduce using rule 83 (constant_expression)


State 217

  126 enumerator: ID EQUAL constant_expression .

    $default  reduce using rule 126 (enumerator)


State 218

  121 enum_specifier: ENUM identifieropt LEFT_CURLY_BRACE enumerator_list COMMA RIGHT_CURLY_BRACE .

    $default  reduce using rule 121 (enum_specifier)


State 219

  124 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 124 (enumerator_list)


State 220

   14 postfix_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   25 unary_expression: SIZEOF LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 284


State 221

    6 primary_expression: LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE .

    $default  reduce using rule 6 (primary_expression)


State 222

   80 expression: expression COMMA . assignment_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 285


State 223

  118 specifier_qualifier_listopt: specifier_qualifier_list .

    $default  reduce using rule 118 (specifier_qualifier_listopt)


State 224

  116 specifier_qualifier_list: type_specifier specifier_qualifier_listopt .

    $default  reduce using rule 116 (specifier_qualifier_list)


State 225

  117 specifier_qualifier_list: type_qualifier specifier_qualifier_listopt .

    $default  reduce using rule 117 (specifier_qualifier_list)


State 226

   14 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   33 cast_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . cast_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 286
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 159
    unary_operator      go to state 91
    cast_expression     go to state 287


State 227

  170 designator: LEFT_SQUARE_BRACE constant_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 288


State 228

  171 designator: PERIOD ID .

    $default  reduce using rule 171 (designator)


State 229

  161 initializer: LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 161 (initializer)


State 230

  162 initializer: LEFT_CURLY_BRACE initializer_list COMMA . RIGHT_CURLY_BRACE
  164 initializer_list: initializer_list COMMA . designationopt initializer

    LEFT_SQUARE_BRACE  shift, and go to state 131
    RIGHT_CURLY_BRACE  shift, and go to state 289
    PERIOD             shift, and go to state 132

    $default  reduce using rule 167 (designationopt)

    designation      go to state 134
    designationopt   go to state 290
    designator_list  go to state 136
    designator       go to state 137


State 231

  163 initializer_list: designationopt initializer .

    $default  reduce using rule 163 (initializer_list)


State 232

  165 designation: designator_list EQUAL .

    $default  reduce using rule 165 (designation)


State 233

  169 designator_list: designator_list designator .

    $default  reduce using rule 169 (designator_list)


State 234

   14 postfix_expression: LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE type_name . RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 291


State 235

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACE expression . RIGHT_SQUARE_BRACE
   80 expression: expression . COMMA assignment_expression

    RIGHT_SQUARE_BRACE  shift, and go to state 292
    COMMA               shift, and go to state 222


State 236

    9 postfix_expression: postfix_expression LEFT_ROUND_BRACE argument_expression_listopt . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 293


State 237

   16 argument_expression_listopt: argument_expression_list .
   19 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 294

    $default  reduce using rule 16 (argument_expression_listopt)


State 238

   18 argument_expression_list: assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 239

   10 postfix_expression: postfix_expression PERIOD ID .

    $default  reduce using rule 10 (postfix_expression)


State 240

   11 postfix_expression: postfix_expression ARROW ID .

    $default  reduce using rule 11 (postfix_expression)


State 241

   65 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 65 (assignment_expression)


State 242

   35 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 243

   36 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 244

   37 multiplicative_expression: multiplicative_expression MODULUS cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 245

   35 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   36                          | multiplicative_expression . DIVIDE cast_expression
   37                          | multiplicative_expression . MODULUS cast_expression
   39 additive_expression: additive_expression ADD multiplicative_expression .

    MULTIPLY  shift, and go to state 161
    DIVIDE    shift, and go to state 162
    MODULUS   shift, and go to state 163

    $default  reduce using rule 39 (additive_expression)


State 246

   35 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   36                          | multiplicative_expression . DIVIDE cast_expression
   37                          | multiplicative_expression . MODULUS cast_expression
   40 additive_expression: additive_expression SUBTRACT multiplicative_expression .

    MULTIPLY  shift, and go to state 161
    DIVIDE    shift, and go to state 162
    MODULUS   shift, and go to state 163

    $default  reduce using rule 40 (additive_expression)


State 247

   39 additive_expression: additive_expression . ADD multiplicative_expression
   40                    | additive_expression . SUBTRACT multiplicative_expression
   42 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    ADD       shift, and go to state 164
    SUBTRACT  shift, and go to state 165

    $default  reduce using rule 42 (shift_expression)


State 248

   39 additive_expression: additive_expression . ADD multiplicative_expression
   40                    | additive_expression . SUBTRACT multiplicative_expression
   43 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    ADD       shift, and go to state 164
    SUBTRACT  shift, and go to state 165

    $default  reduce using rule 43 (shift_expression)


State 249

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   45 relational_expression: relational_expression LESS_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 166
    RIGHT_SHIFT  shift, and go to state 167

    $default  reduce using rule 45 (relational_expression)


State 250

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression GREATER_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 166
    RIGHT_SHIFT  shift, and go to state 167

    $default  reduce using rule 46 (relational_expression)


State 251

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   47 relational_expression: relational_expression LESS_THAN_EQUAL_TO shift_expression .

    LEFT_SHIFT   shift, and go to state 166
    RIGHT_SHIFT  shift, and go to state 167

    $default  reduce using rule 47 (relational_expression)


State 252

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   48 relational_expression: relational_expression GREATER_THAN_EQUAL_TO shift_expression .

    LEFT_SHIFT   shift, and go to state 166
    RIGHT_SHIFT  shift, and go to state 167

    $default  reduce using rule 48 (relational_expression)


State 253

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_THAN_EQUAL_TO shift_expression
   48                      | relational_expression . GREATER_THAN_EQUAL_TO shift_expression
   50 equality_expression: equality_expression DOUBLE_EQUAL relational_expression .

    LESS_THAN              shift, and go to state 168
    GREATER_THAN           shift, and go to state 169
    LESS_THAN_EQUAL_TO     shift, and go to state 170
    GREATER_THAN_EQUAL_TO  shift, and go to state 171

    $default  reduce using rule 50 (equality_expression)


State 254

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_THAN_EQUAL_TO shift_expression
   48                      | relational_expression . GREATER_THAN_EQUAL_TO shift_expression
   51 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESS_THAN              shift, and go to state 168
    GREATER_THAN           shift, and go to state 169
    LESS_THAN_EQUAL_TO     shift, and go to state 170
    GREATER_THAN_EQUAL_TO  shift, and go to state 171

    $default  reduce using rule 51 (equality_expression)


State 255

   50 equality_expression: equality_expression . DOUBLE_EQUAL relational_expression
   51                    | equality_expression . NOT_EQUAL relational_expression
   53 and_expression: and_expression AMPERSAND equality_expression .

    DOUBLE_EQUAL  shift, and go to state 172
    NOT_EQUAL     shift, and go to state 173

    $default  reduce using rule 53 (and_expression)


State 256

   53 and_expression: and_expression . AMPERSAND equality_expression
   55 exclusive_or_expression: exclusive_or_expression XOR and_expression .

    AMPERSAND  shift, and go to state 174

    $default  reduce using rule 55 (exclusive_or_expression)


State 257

   55 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   57 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    XOR  shift, and go to state 175

    $default  reduce using rule 57 (inclusive_or_expression)


State 258

   57 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   59 logical_and_expression: logical_and_expression BINARY_AND inclusive_or_expression .

    BITWISE_OR  shift, and go to state 176

    $default  reduce using rule 59 (logical_and_expression)


State 259

   59 logical_and_expression: logical_and_expression . BINARY_AND inclusive_or_expression
   61 logical_or_expression: logical_or_expression BINARY_OR logical_and_expression .

    BINARY_AND  shift, and go to state 177

    $default  reduce using rule 61 (logical_or_expression)


State 260

   63 conditional_expression: logical_or_expression QUESTION_MARK expression . COLON conditional_expression
   80 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 295
    COMMA  shift, and go to state 222


State 261

  198 jump_statement: BREAK SEMI_COLON .

    $default  reduce using rule 198 (jump_statement)


State 262

  179 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 296


State 263

  197 jump_statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 197 (jump_statement)


State 264

  180 labeled_statement: DEFAULT COLON . statement

    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    RETURN            shift, and go to state 188
    SIZEOF            shift, and go to state 72
    SWITCH            shift, and go to state 189
    WHILE             shift, and go to state 190
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    statement                  go to state 297
    labeled_statement          go to state 197
    compound_statement         go to state 198
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 265

  193 iteration_statement: DO statement . WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMI_COLON

    WHILE  shift, and go to state 298


State 266

  194 iteration_statement: FOR LEFT_ROUND_BRACE . expressionopt SEMI_COLON expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement
  195                    | FOR LEFT_ROUND_BRACE . declaration expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement

    AUTO              shift, and go to state 1
    CHAR              shift, and go to state 2
    CONST             shift, and go to state 3
    DOUBLE            shift, and go to state 4
    ENUM              shift, and go to state 5
    EXTERN            shift, and go to state 6
    FLOAT             shift, and go to state 7
    INLINE            shift, and go to state 8
    INT               shift, and go to state 9
    LONG              shift, and go to state 10
    REGISTER          shift, and go to state 11
    RESTRICT          shift, and go to state 12
    SHORT             shift, and go to state 13
    SIGNED            shift, and go to state 14
    SIZEOF            shift, and go to state 72
    STATIC            shift, and go to state 15
    UNSIGNED          shift, and go to state 16
    VOID              shift, and go to state 17
    VOLATILE          shift, and go to state 18
    BOOL              shift, and go to state 19
    COMPLEX           shift, and go to state 20
    IMAGINARY         shift, and go to state 21
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    $default  reduce using rule 82 (expressionopt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 269
    expressionopt              go to state 299
    declaration                go to state 300
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28


State 267

  196 jump_statement: GOTO ID . SEMI_COLON

    SEMI_COLON  shift, and go to state 301


State 268

  189 selection_statement: IF LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement
  190                    | IF LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement ELSE statement

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 302


State 269

   80 expression: expression . COMMA assignment_expression
   81 expressionopt: expression .

    COMMA  shift, and go to state 222

    $default  reduce using rule 81 (expressionopt)


State 270

  199 jump_statement: RETURN expressionopt . SEMI_COLON

    SEMI_COLON  shift, and go to state 303


State 271

  191 selection_statement: SWITCH LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 304


State 272

  192 iteration_statement: WHILE LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 305


State 273

  178 labeled_statement: ID COLON . statement

    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    RETURN            shift, and go to state 188
    SIZEOF            shift, and go to state 72
    SWITCH            shift, and go to state 189
    WHILE             shift, and go to state 190
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    statement                  go to state 306
    labeled_statement          go to state 197
    compound_statement         go to state 198
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 274

  188 expression_statement: expression SEMI_COLON .

    $default  reduce using rule 188 (expression_statement)


State 275

  182 compound_statement: LEFT_CURLY_BRACE block_item_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 182 (compound_statement)


State 276

  184 block_item_list: block_item_list M . block_item

    AUTO              shift, and go to state 1
    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CHAR              shift, and go to state 2
    CONST             shift, and go to state 3
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    DOUBLE            shift, and go to state 4
    ENUM              shift, and go to state 5
    EXTERN            shift, and go to state 6
    FLOAT             shift, and go to state 7
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    INLINE            shift, and go to state 8
    INT               shift, and go to state 9
    LONG              shift, and go to state 10
    REGISTER          shift, and go to state 11
    RESTRICT          shift, and go to state 12
    RETURN            shift, and go to state 188
    SHORT             shift, and go to state 13
    SIGNED            shift, and go to state 14
    SIZEOF            shift, and go to state 72
    STATIC            shift, and go to state 15
    SWITCH            shift, and go to state 189
    UNSIGNED          shift, and go to state 16
    VOID              shift, and go to state 17
    VOLATILE          shift, and go to state 18
    WHILE             shift, and go to state 190
    BOOL              shift, and go to state 19
    COMPLEX           shift, and go to state 20
    IMAGINARY         shift, and go to state 21
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    declaration                go to state 195
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 196
    labeled_statement          go to state 197
    compound_statement         go to state 198
    block_item                 go to state 307
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 277

  136 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC type_qualifier_listopt assignment_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 308


State 278

  137 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC assignment_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 309


State 279

  138 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_listopt MULTIPLY RIGHT_SQUARE_BRACE .

    $default  reduce using rule 138 (direct_declarator)


State 280

  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_listopt assignment_expressionopt RIGHT_SQUARE_BRACE .

    $default  reduce using rule 135 (direct_declarator)


State 281

  150 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 150 (parameter_type_list)


State 282

  152 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 152 (parameter_list)


State 283

  156 identifier_list: identifier_list COMMA ID .

    $default  reduce using rule 156 (identifier_list)


State 284

   14 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE
   25 unary_expression: SIZEOF LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE .

    LEFT_CURLY_BRACE  shift, and go to state 286

    $default  reduce using rule 25 (unary_expression)


State 285

   80 expression: expression COMMA assignment_expression .

    $default  reduce using rule 80 (expression)


State 286

   14 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE . initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE . initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 131
    PERIOD             shift, and go to state 132

    $default  reduce using rule 167 (designationopt)

    initializer_list  go to state 310
    designation       go to state 134
    designationopt    go to state 135
    designator_list   go to state 136
    designator        go to state 137


State 287

   33 cast_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE cast_expression .

    $default  reduce using rule 33 (cast_expression)


State 288

  170 designator: LEFT_SQUARE_BRACE constant_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 170 (designator)


State 289

  162 initializer: LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE .

    $default  reduce using rule 162 (initializer)


State 290

  164 initializer_list: initializer_list COMMA designationopt . initializer

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 79
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 104
    initializer                go to state 311


State 291

   14 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE . LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 286


State 292

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 8 (postfix_expression)


State 293

    9 postfix_expression: postfix_expression LEFT_ROUND_BRACE argument_expression_listopt RIGHT_ROUND_BRACE .

    $default  reduce using rule 9 (postfix_expression)


State 294

   19 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 312


State 295

   63 conditional_expression: logical_or_expression QUESTION_MARK expression COLON . conditional_expression

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 159
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 313


State 296

  179 labeled_statement: CASE constant_expression COLON . statement

    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    RETURN            shift, and go to state 188
    SIZEOF            shift, and go to state 72
    SWITCH            shift, and go to state 189
    WHILE             shift, and go to state 190
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    statement                  go to state 314
    labeled_statement          go to state 197
    compound_statement         go to state 198
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 297

  180 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 180 (labeled_statement)


State 298

  193 iteration_statement: DO statement WHILE . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMI_COLON

    LEFT_ROUND_BRACE  shift, and go to state 315


State 299

  194 iteration_statement: FOR LEFT_ROUND_BRACE expressionopt . SEMI_COLON expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement

    SEMI_COLON  shift, and go to state 316


State 300

  195 iteration_statement: FOR LEFT_ROUND_BRACE declaration . expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    $default  reduce using rule 82 (expressionopt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 269
    expressionopt              go to state 317


State 301

  196 jump_statement: GOTO ID SEMI_COLON .

    $default  reduce using rule 196 (jump_statement)


State 302

   80 expression: expression . COMMA assignment_expression
  189 selection_statement: IF LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement
  190                    | IF LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement ELSE statement

    RIGHT_ROUND_BRACE  shift, and go to state 318
    COMMA              shift, and go to state 222


State 303

  199 jump_statement: RETURN expressionopt SEMI_COLON .

    $default  reduce using rule 199 (jump_statement)


State 304

   80 expression: expression . COMMA assignment_expression
  191 selection_statement: SWITCH LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 319
    COMMA              shift, and go to state 222


State 305

   80 expression: expression . COMMA assignment_expression
  192 iteration_statement: WHILE LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 320
    COMMA              shift, and go to state 222


State 306

  178 labeled_statement: ID COLON statement .

    $default  reduce using rule 178 (labeled_statement)


State 307

  184 block_item_list: block_item_list M block_item .

    $default  reduce using rule 184 (block_item_list)


State 308

  136 direct_declarator: direct_declarator LEFT_SQUARE_BRACE STATIC type_qualifier_listopt assignment_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 136 (direct_declarator)


State 309

  137 direct_declarator: direct_declarator LEFT_SQUARE_BRACE type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 137 (direct_declarator)


State 310

   14 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list . RIGHT_CURLY_BRACE
   15                   | LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list . COMMA RIGHT_CURLY_BRACE
  164 initializer_list: initializer_list . COMMA designationopt initializer

    RIGHT_CURLY_BRACE  shift, and go to state 321
    COMMA              shift, and go to state 322


State 311

  164 initializer_list: initializer_list COMMA designationopt initializer .

    $default  reduce using rule 164 (initializer_list)


State 312

   19 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 313

   63 conditional_expression: logical_or_expression QUESTION_MARK expression COLON conditional_expression .

    $default  reduce using rule 63 (conditional_expression)


State 314

  179 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 179 (labeled_statement)


State 315

  193 iteration_statement: DO statement WHILE LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE SEMI_COLON

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 323


State 316

  194 iteration_statement: FOR LEFT_ROUND_BRACE expressionopt SEMI_COLON . expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    $default  reduce using rule 82 (expressionopt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 269
    expressionopt              go to state 324


State 317

  195 iteration_statement: FOR LEFT_ROUND_BRACE declaration expressionopt . SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement

    SEMI_COLON  shift, and go to state 325


State 318

  189 selection_statement: IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement
  190                    | IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement ELSE statement

    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    RETURN            shift, and go to state 188
    SIZEOF            shift, and go to state 72
    SWITCH            shift, and go to state 189
    WHILE             shift, and go to state 190
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    statement                  go to state 326
    labeled_statement          go to state 197
    compound_statement         go to state 198
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 319

  191 selection_statement: SWITCH LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement

    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    RETURN            shift, and go to state 188
    SIZEOF            shift, and go to state 72
    SWITCH            shift, and go to state 189
    WHILE             shift, and go to state 190
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    statement                  go to state 327
    labeled_statement          go to state 197
    compound_statement         go to state 198
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 320

  192 iteration_statement: WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement

    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    RETURN            shift, and go to state 188
    SIZEOF            shift, and go to state 72
    SWITCH            shift, and go to state 189
    WHILE             shift, and go to state 190
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    statement                  go to state 328
    labeled_statement          go to state 197
    compound_statement         go to state 198
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 321

   14 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 14 (postfix_expression)


State 322

   15 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA . RIGHT_CURLY_BRACE
  164 initializer_list: initializer_list COMMA . designationopt initializer

    LEFT_SQUARE_BRACE  shift, and go to state 131
    RIGHT_CURLY_BRACE  shift, and go to state 329
    PERIOD             shift, and go to state 132

    $default  reduce using rule 167 (designationopt)

    designation      go to state 134
    designationopt   go to state 290
    designator_list  go to state 136
    designator       go to state 137


State 323

   80 expression: expression . COMMA assignment_expression
  193 iteration_statement: DO statement WHILE LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE SEMI_COLON

    RIGHT_ROUND_BRACE  shift, and go to state 330
    COMMA              shift, and go to state 222


State 324

  194 iteration_statement: FOR LEFT_ROUND_BRACE expressionopt SEMI_COLON expressionopt . SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement

    SEMI_COLON  shift, and go to state 331


State 325

  195 iteration_statement: FOR LEFT_ROUND_BRACE declaration expressionopt SEMI_COLON . expressionopt RIGHT_ROUND_BRACE statement

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    $default  reduce using rule 82 (expressionopt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 269
    expressionopt              go to state 332


State 326

  189 selection_statement: IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .
  190                    | IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement . ELSE statement

    ELSE  shift, and go to state 333

    ELSE      [reduce using rule 189 (selection_statement)]
    $default  reduce using rule 189 (selection_statement)


State 327

  191 selection_statement: SWITCH LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 191 (selection_statement)


State 328

  192 iteration_statement: WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 192 (iteration_statement)


State 329

   15 postfix_expression: LEFT_ROUND_BRACE type_name RIGHT_ROUND_BRACE LEFT_CURLY_BRACE initializer_list COMMA RIGHT_CURLY_BRACE .

    $default  reduce using rule 15 (postfix_expression)


State 330

  193 iteration_statement: DO statement WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . SEMI_COLON

    SEMI_COLON  shift, and go to state 334


State 331

  194 iteration_statement: FOR LEFT_ROUND_BRACE expressionopt SEMI_COLON expressionopt SEMI_COLON . expressionopt RIGHT_ROUND_BRACE statement

    SIZEOF            shift, and go to state 72
    ID                shift, and go to state 73
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87

    $default  reduce using rule 82 (expressionopt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 269
    expressionopt              go to state 335


State 332

  195 iteration_statement: FOR LEFT_ROUND_BRACE declaration expressionopt SEMI_COLON expressionopt . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 336


State 333

  190 selection_statement: IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE . statement

    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    RETURN            shift, and go to state 188
    SIZEOF            shift, and go to state 72
    SWITCH            shift, and go to state 189
    WHILE             shift, and go to state 190
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    statement                  go to state 337
    labeled_statement          go to state 197
    compound_statement         go to state 198
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 334

  193 iteration_statement: DO statement WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMI_COLON .

    $default  reduce using rule 193 (iteration_statement)


State 335

  194 iteration_statement: FOR LEFT_ROUND_BRACE expressionopt SEMI_COLON expressionopt SEMI_COLON expressionopt . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 338


State 336

  195 iteration_statement: FOR LEFT_ROUND_BRACE declaration expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE . statement

    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    RETURN            shift, and go to state 188
    SIZEOF            shift, and go to state 72
    SWITCH            shift, and go to state 189
    WHILE             shift, and go to state 190
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    statement                  go to state 339
    labeled_statement          go to state 197
    compound_statement         go to state 198
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 337

  190 selection_statement: IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE statement .

    $default  reduce using rule 190 (selection_statement)


State 338

  194 iteration_statement: FOR LEFT_ROUND_BRACE expressionopt SEMI_COLON expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE . statement

    BREAK             shift, and go to state 180
    CASE              shift, and go to state 181
    CONTINUE          shift, and go to state 182
    DEFAULT           shift, and go to state 183
    DO                shift, and go to state 184
    FOR               shift, and go to state 185
    GOTO              shift, and go to state 186
    IF                shift, and go to state 187
    RETURN            shift, and go to state 188
    SIZEOF            shift, and go to state 72
    SWITCH            shift, and go to state 189
    WHILE             shift, and go to state 190
    ID                shift, and go to state 191
    INT_NO            shift, and go to state 74
    FLOAT_NO          shift, and go to state 75
    CHARACTER         shift, and go to state 76
    STRING            shift, and go to state 77
    LEFT_ROUND_BRACE  shift, and go to state 78
    LEFT_CURLY_BRACE  shift, and go to state 106
    INCREMENT         shift, and go to state 80
    DECREMENT         shift, and go to state 81
    AMPERSAND         shift, and go to state 82
    MULTIPLY          shift, and go to state 83
    ADD               shift, and go to state 84
    SUBTRACT          shift, and go to state 85
    TILDA             shift, and go to state 86
    NEGATION          shift, and go to state 87
    SEMI_COLON        shift, and go to state 193

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 125
    expression                 go to state 194
    statement                  go to state 340
    labeled_statement          go to state 197
    compound_statement         go to state 198
    expression_statement       go to state 201
    selection_statement        go to state 202
    iteration_statement        go to state 203
    jump_statement             go to state 204


State 339

  195 iteration_statement: FOR LEFT_ROUND_BRACE declaration expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 195 (iteration_statement)


State 340

  194 iteration_statement: FOR LEFT_ROUND_BRACE expressionopt SEMI_COLON expressionopt SEMI_COLON expressionopt RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 194 (iteration_statement)
